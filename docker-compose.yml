version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hotel_postgres
    environment:
      POSTGRES_DB: HotelRezervationDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 177381
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hotel_network

  # Backend API
  backend:
    build:
      context: ./HotelApi
      dockerfile: Dockerfile
    container_name: hotel_backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=HotelRezervationDB;Username=postgres;Password=177381
      - JwtSettings__SecretKey=your-super-secret-key-with-at-least-32-characters-long-enough-for-jwt-production
      - JwtSettings__Issuer=HotelReservationAPI
      - JwtSettings__Audience=HotelReservationUsers
      - JwtSettings__ExpirationInMinutes=60
    ports:
      - "5000:80"
    depends_on:
      - postgres
    networks:
      - hotel_network

  # Frontend
  frontend:
    build:
      context: ./hotelweb
      dockerfile: Dockerfile
    container_name: hotel_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - hotel_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hotel_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - hotel_network

volumes:
  postgres_data:

networks:
  hotel_network:
    driver: bridge
